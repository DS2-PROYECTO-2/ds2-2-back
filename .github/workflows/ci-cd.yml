name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          echo "Installing Django and dependencies..."
          pip install --no-cache-dir "Django>=4.2,<5.0"
          pip install --no-cache-dir "djangorestframework==3.14.0"
          pip install --no-cache-dir "django-cors-headers==4.9.0"
          pip install --no-cache-dir "Pillow==10.4.0"
          pip install --no-cache-dir "python-decouple==3.8"
          pip install --no-cache-dir "django-environ==0.11.2"
          pip install --no-cache-dir "requests>=2.25.0"
          pip install --no-cache-dir "psycopg2-binary>=2.9.0"
          echo "Verifying installation..."
          pip list
          python -c "import django; print(f'Django version: {django.get_version()}')"

      - name: Django checks
        env:
          DJANGO_ENV: testing
          DJANGO_SETTINGS_MODULE: ds2_back.settings
        run: |
          python manage.py check
          python manage.py makemigrations --check --dry-run

      - name: Run tests
        env:
          DJANGO_ENV: testing
          DJANGO_SETTINGS_MODULE: ds2_back.settings
        run: |
          python manage.py test --verbosity 1 --keepdb

  deploy:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true
          timeout: 600

      - name: Notify deployment success
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üöÄ Service deployed to: ${{ secrets.RENDER_SERVICE_URL }}"
          echo "üìÖ Deployed at: $(date)"
          echo "üîó Branch: ${{ github.ref_name }}"
          echo "üìù Commit: ${{ github.sha }}"
